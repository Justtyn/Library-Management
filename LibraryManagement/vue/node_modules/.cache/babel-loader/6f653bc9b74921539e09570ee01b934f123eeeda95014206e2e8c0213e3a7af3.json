{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\n//   import { load } from \"mime\";\nimport Cookies from \"js-cookie\";\nexport default {\n  name: \"CategoryList\",\n  data() {\n    return {\n      admin: Cookies.get(\"admin\") ? JSON.parse(Cookies.get(\"admin\")) : {},\n      tableData: [],\n      dialogFormVisible: false,\n      total: 0,\n      form: {},\n      pid: null,\n      // 表单格式判断规则\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入分类名称\",\n          trigger: \"blur\"\n        }]\n      },\n      params: {\n        pageNum: 1,\n        pagesize: 10,\n        name: \"\"\n      },\n      index: false,\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入分类名称\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      request.get(\"/category/page\", {\n        params: this.params\n      }).then(res => {\n        if (res.code = \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n    loadAsc() {\n      request.get(\"/category/pageAsc\", {\n        params: this.params\n      }).then(res => {\n        if (res.code = \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n    del(id) {\n      request.delete(\"/category/delete/\" + id).then(res => {\n        if (res.code === \"200\") {\n          this.$notify.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$notify.error(\"删除失败\");\n        }\n      });\n    },\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pagesize: 10,\n        name: \"\"\n      };\n      this.load();\n    },\n    handelCurrentChange(pNum) {\n      // 点击分页按钮 触发分页\n      console.log(pNum);\n      this.params.pageNum = pNum;\n      this.load();\n    },\n    switchSort(index) {\n      if (this.index === true) {\n        this.loadAsc();\n      } else {\n        this.load();\n      }\n    },\n    handleAdd(row) {\n      // 将当前行id 作为二级分类的pid\n      this.pid = row.id;\n      this.dialogFormVisible = true;\n    },\n    save() {\n      this.$refs[\"formRef\"].validate(valid => {\n        if (valid) {\n          request.post(\"/category/save\", this.form).then(res => {\n            if (res.code === \"200\") {\n              this.$notify.success(\"新增二级分类成功\");\n              this.$refs[\"ruleForm\"].resetFields();\n              this.$router.push(\"/categoryList\");\n              this.form = {};\n            } else {\n              this.$notify.error(\"新增二级分类失败\" + res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","request","Cookies","name","data","admin","get","JSON","parse","tableData","dialogFormVisible","total","form","pid","rules","required","message","trigger","params","pageNum","pagesize","index","created","load","methods","then","res","code","list","loadAsc","del","id","delete","$notify","success","error","reset","handelCurrentChange","pNum","console","log","switchSort","handleAdd","row","save","$refs","validate","valid","post","resetFields","$router","push","msg"],"sources":["src/views/category/List.vue"],"sourcesContent":["<template>\n<div style=\"padding: 35px\">\n    <!-- 搜索表单 -->\n    <div style=\"margin-bottom: 20px\">\n        <!-- 检索输入框 -->\n        <el-input style=\"width: 140px\" placeholder=\"请输入分类 ID\" v-model=\"params.id\"></el-input>\n        <el-input style=\"margin-left: 5px; width: 160px\" placeholder=\"请输入分类名称\" v-model=\"params.name\"></el-input>\n\n        <el-button @click=\"load\" style=\"margin-left: 5px\" type=\"primary\"><i class=\"el-icon-search\"></i><span>搜索</span></el-button>\n        <el-button @click=\"reset\" style=\"margin-left: 5px\" type=\"warning\"><i class=\"el-icon-refresh\"></i><span>重置</span></el-button>\n\n        <el-button style=\"float: right; margin-right: 13px\" @click=\"$router.push('/addCategory')\" type=\"danger\"><i class=\"el-icon-refresh\"></i><span>添加分类</span></el-button>\n        <el-button @click=\"(index = !index), switchSort(index)\" style=\"float: right; margin-right: 0px\" type=\"primary\"><i class=\"el-icon-loading\"></i><span>{{ index ? \"倒序\" : \"正序\" }}</span></el-button>\n    </div>\n\n    <el-table :data=\"tableData\" stripe row-key=\"id\" default-expand-all>\n        <el-table-column prop=\"id\" width=\"90\" label=\"编号\"></el-table-column>\n        <el-table-column prop=\"name\" width=\"100\" label=\"分类名称\"></el-table-column>\n        <el-table-column prop=\"remark\" width=\"150\" label=\"备注\"></el-table-column>\n        <el-table-column prop=\"createTime\" width=\"150\" label=\"创建时间\"></el-table-column>\n        <el-table-column prop=\"updateTime\" width=\"150\" label=\"更新时间\"></el-table-column>\n\n        <el-table-column label=\"操作\" width=\"250\">\n            <template v-slot=\"scope\">\n                <el-button style=\"float: \" v-if=\"!scope.row.pid\"  @click=\"handleAdd(scope.row)\" type=\"success\" size=\"mini\">添加子分类</el-button>\n                <el-button style=\"float: right\" @click=\"$router.push('/editCategory?id=' + scope.row.id)\" type=\"primary\" size=\"mini\">编辑</el-button>\n                <el-popconfirm style=\"margin-left: 10px; float: \" title=\"您确定删除这行数据嘛？\" @confirm=\"del(scope.row.id)\">\n                    <el-button style=\"float: right; margin-right: 10px;\" type=\"danger\" size=\"mini\" slot=\"reference\">删除</el-button>\n                </el-popconfirm>\n            </template>\n        </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div style=\"margin-top: 10px\">\n        <div class=\"block\">\n            <el-pagination current-page=\"params.pageNum\" page-size=\"params.pageSize\" layout=\"prev, pager, next\" @current-change=\"handelCurrentChange\" :total=\"total\">\n            </el-pagination>\n        </div>\n    </div>\n\n    <!-- 添加二级分类弹窗 -->\n    <el-dialog title=\"添加二级分类\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"100px\" ref=\"formRef\" :rules=\"rules\">\n            <el-form-item label=\"分类名称\" prop=\"name\">\n                <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类备注\" prop=\"remark\">\n                <el-input v-model=\"form.remark\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </div>\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\n//   import { load } from \"mime\";\nimport Cookies from \"js-cookie\";\n\nexport default {\n    name: \"CategoryList\",\n\n    data() {\n        return {\n            admin: Cookies.get(\"admin\") ? JSON.parse(Cookies.get(\"admin\")) : {},\n            tableData: [],\n            dialogFormVisible: false,\n            total: 0,\n            form: {},\n            pid: null,\n            // 表单格式判断规则\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"请输入分类名称\",\n                    trigger: \"blur\",\n                }, ],\n            },\n            params: {\n                pageNum: 1,\n                pagesize: 10,\n                name: \"\",\n            },\n            index: false,\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"请输入分类名称\",\n                    trigger: \"blur\"\n                }, ],\n            }\n        };\n    },\n    created() {\n        this.load();\n    },\n    methods: {\n        load() {\n            request\n                .get(\"/category/page\", {\n                    params: this.params,\n                })\n                .then((res) => {\n                    if ((res.code = \"200\")) {\n                        this.tableData = res.data.list;\n                        this.total = res.data.total;\n                    }\n                });\n        },\n        loadAsc() {\n            request\n                .get(\"/category/pageAsc\", {\n                    params: this.params,\n                })\n                .then((res) => {\n                    if ((res.code = \"200\")) {\n                        this.tableData = res.data.list;\n                        this.total = res.data.total;\n                    }\n                });\n        },\n        del(id) {\n            request.delete(\"/category/delete/\" + id).then((res) => {\n                if (res.code === \"200\") {\n                    this.$notify.success(\"删除成功\");\n                    this.load();\n                } else {\n                    this.$notify.error(\"删除失败\");\n                }\n            });\n        },\n        reset() {\n            this.params = {\n                pageNum: 1,\n                pagesize: 10,\n                name: \"\",\n            };\n            this.load();\n        },\n        handelCurrentChange(pNum) {\n            // 点击分页按钮 触发分页\n            console.log(pNum);\n            this.params.pageNum = pNum;\n            this.load();\n        },\n        switchSort(index) {\n            if (this.index === true) {\n                this.loadAsc();\n            } else {\n                this.load();\n            }\n        },\n        handleAdd(row) {\n            // 将当前行id 作为二级分类的pid\n            this.pid = row.id;\n            this.dialogFormVisible = true;\n        },\n        save() {\n            this.$refs[\"formRef\"].validate((valid) => {\n                if (valid) {\n                    request.post(\"/category/save\", this.form).then((res) => {\n                        if (res.code === \"200\") {\n                            this.$notify.success(\"新增二级分类成功\");\n                            this.$refs[\"ruleForm\"].resetFields();\n                            this.$router.push(\"/categoryList\");\n                            this.form = {};\n                        } else {\n                            this.$notify.error(\"新增二级分类失败\" + res.msg);\n                        }\n                    });\n                }\n            });\n        },\n    },\n};\n</script>\n"],"mappings":";AA4DA,OAAAA,MAAA;AACA,OAAAC,OAAA;AACA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,KAAA,EAAAH,OAAA,CAAAI,GAAA,YAAAC,IAAA,CAAAC,KAAA,CAAAN,OAAA,CAAAI,GAAA;MACAG,SAAA;MACAC,iBAAA;MACAC,KAAA;MACAC,IAAA;MACAC,GAAA;MACA;MACAC,KAAA;QACAX,IAAA;UACAY,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MACA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAjB,IAAA;MACA;MACAkB,KAAA;MACAP,KAAA;QACAX,IAAA;UACAY,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MACA;IACA;EACA;EACAK,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACAtB,OAAA,CACAK,GAAA;QACAY,MAAA,OAAAA;MACA,GACAO,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAlB,SAAA,GAAAiB,GAAA,CAAAtB,IAAA,CAAAwB,IAAA;UACA,KAAAjB,KAAA,GAAAe,GAAA,CAAAtB,IAAA,CAAAO,KAAA;QACA;MACA;IACA;IACAkB,QAAA;MACA5B,OAAA,CACAK,GAAA;QACAY,MAAA,OAAAA;MACA,GACAO,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAlB,SAAA,GAAAiB,GAAA,CAAAtB,IAAA,CAAAwB,IAAA;UACA,KAAAjB,KAAA,GAAAe,GAAA,CAAAtB,IAAA,CAAAO,KAAA;QACA;MACA;IACA;IACAmB,IAAAC,EAAA;MACA9B,OAAA,CAAA+B,MAAA,uBAAAD,EAAA,EAAAN,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAM,OAAA,CAAAC,OAAA;UACA,KAAAX,IAAA;QACA;UACA,KAAAU,OAAA,CAAAE,KAAA;QACA;MACA;IACA;IACAC,MAAA;MACA,KAAAlB,MAAA;QACAC,OAAA;QACAC,QAAA;QACAjB,IAAA;MACA;MACA,KAAAoB,IAAA;IACA;IACAc,oBAAAC,IAAA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;MACA,KAAApB,MAAA,CAAAC,OAAA,GAAAmB,IAAA;MACA,KAAAf,IAAA;IACA;IACAkB,WAAApB,KAAA;MACA,SAAAA,KAAA;QACA,KAAAQ,OAAA;MACA;QACA,KAAAN,IAAA;MACA;IACA;IACAmB,UAAAC,GAAA;MACA;MACA,KAAA9B,GAAA,GAAA8B,GAAA,CAAAZ,EAAA;MACA,KAAArB,iBAAA;IACA;IACAkC,KAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA9C,OAAA,CAAA+C,IAAA,wBAAApC,IAAA,EAAAa,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAM,OAAA,CAAAC,OAAA;cACA,KAAAW,KAAA,aAAAI,WAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAvC,IAAA;YACA;cACA,KAAAqB,OAAA,CAAAE,KAAA,cAAAT,GAAA,CAAA0B,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}