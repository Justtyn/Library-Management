{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"AddUser\",\n  data() {\n    // 检查手机函数\n    var checkPhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"手机不能为空\"));\n      }\n      if (!/^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n        callback(new Error(\"请输入合法的手机号\"));\n      }\n      callback();\n    };\n    return {\n      form: {},\n      // 表单格式判断规则\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }, {\n          min: 2,\n          max: 10,\n          message: \"用户名长度不合规 「2 - 10」\",\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: checkPhone,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    save() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          request.post(\"/admin/save\", this.form).then(res => {\n            if (res.code === \"200\") {\n              this.$notify.success(\"新增成功\");\n              this.$refs[\"ruleForm\"].resetFields();\n              this.$router.push(\"/admin\");\n              this.form = {};\n            } else {\n              this.$notify.error(\"新增失败\" + \"\\nres.msg\");\n            }\n          });\n        } else {}\n      });\n    },\n    nameCheck() {\n      const username = this.form.username;\n      request.get(\"/admin/namecheck?\", {\n        params: {\n          username\n        }\n      }).then(res => {\n        console.log(res.data);\n        console.log(res.code);\n        const a = res.data;\n        if (a.length == 0) {\n          console.log(1);\n          this.save();\n        } else {\n          console.log(2);\n          this.$notify.error(\"用户名重复 请重新输入\" + \"\\nres.msg\");\n          this.form.name = \"\";\n        }\n      });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkPhone","rule","value","callback","Error","test","form","rules","username","required","message","trigger","min","max","phone","validator","methods","save","$refs","validate","valid","post","then","res","code","$notify","success","resetFields","$router","push","error","nameCheck","get","params","console","log","a","length","submitForm","formName","alert"],"sources":["src/views/admin/Add.vue"],"sourcesContent":["<template>\n<div style=\"padding-top: 10px\">\n    <h2 style=\"padding-left: 35px\">新增管理员</h2>\n    <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"width: 80%\" label-width=\"90px\" class=\"demo-form-inline\">\n        <el-form-item label=\"用户名:\" prop=\"username\">\n            <el-input v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号:\" prop=\"phone\">\n            <el-input v-model.number=\"form.phone\" placeholder=\"请输入手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"EMAIL:\" prop=\"\">\n            <el-input v-model=\"form.email\" placeholder=\"请输入EMAIL\"></el-input>\n        </el-form-item>\n    </el-form>\n\n    <div style=\"padding-left: 35px; padding-top: 10px\">\n        <el-button type=\"primary\" @click=\"nameCheck\">提交</el-button>\n        <el-button type=\"danger\">重置</el-button>\n    </div>\n</div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n    name: \"AddUser\",\n    data() {\n        // 检查手机函数\n        var checkPhone = (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error(\"手机不能为空\"));\n            }\n            if (!/^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n                callback(new Error(\"请输入合法的手机号\"));\n            }\n            callback();\n        };\n\n        return {\n            form: {},\n            // 表单格式判断规则\n            rules: {\n                username: [{\n                    required: true,\n                    message: \"请输入用户名\",\n                    trigger: \"blur\"\n                }, {\n                    min: 2,\n                    max: 10,\n                    message: \"用户名长度不合规 「2 - 10」\",\n                    trigger: 'blur'\n                }],\n\n                phone: [{\n                    validator: checkPhone,\n                    trigger: \"blur\"\n                }],\n            },\n        };\n    },\n    methods: {\n        save() {\n            this.$refs[\"ruleForm\"].validate((valid) => {\n                if (valid) {\n                    request.post(\"/admin/save\", this.form).then((res) => {\n                        if (res.code === \"200\") {\n                            this.$notify.success(\"新增成功\");\n                            this.$refs[\"ruleForm\"].resetFields();\n                            this.$router.push(\"/admin\");\n                            this.form = {};\n                        } else {\n                            this.$notify.error(\"新增失败\" + \"\\nres.msg\");\n                        }\n                    });\n                } else {}\n            });\n        },\n        nameCheck() {\n            const username = this.form.username;\n            request.get(\"/admin/namecheck?\", {\n                params: {\n                    username\n                }\n            }).then((res) => {\n                console.log(res.data);\n                console.log(res.code);\n                const a = res.data;\n                if (a.length == 0) {\n                    console.log(1);\n                    this.save();\n                } else {\n                    console.log(2);\n                    this.$notify.error(\"用户名重复 请重新输入\" + \"\\nres.msg\");\n                    this.form.name = \"\";\n                }\n            });\n        },\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    alert(\"submit!\");\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n    },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";AAuBA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA;MACA,oCAAAC,IAAA,CAAAH,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IAEA;MACAG,IAAA;MACA;MACAC,KAAA;QACAC,QAAA;UACAC,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;UACAC,GAAA;UACAC,GAAA;UACAH,OAAA;UACAC,OAAA;QACA;QAEAG,KAAA;UACAC,SAAA,EAAAf,UAAA;UACAW,OAAA;QACA;MACA;IACA;EACA;EACAK,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAvB,OAAA,CAAAwB,IAAA,qBAAAf,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAR,KAAA,aAAAS,WAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAvB,IAAA;YACA;cACA,KAAAmB,OAAA,CAAAK,KAAA;YACA;UACA;QACA;MACA;IACA;IACAC,UAAA;MACA,MAAAvB,QAAA,QAAAF,IAAA,CAAAE,QAAA;MACAX,OAAA,CAAAmC,GAAA;QACAC,MAAA;UACAzB;QACA;MACA,GAAAc,IAAA,CAAAC,GAAA;QACAW,OAAA,CAAAC,GAAA,CAAAZ,GAAA,CAAAxB,IAAA;QACAmC,OAAA,CAAAC,GAAA,CAAAZ,GAAA,CAAAC,IAAA;QACA,MAAAY,CAAA,GAAAb,GAAA,CAAAxB,IAAA;QACA,IAAAqC,CAAA,CAAAC,MAAA;UACAH,OAAA,CAAAC,GAAA;UACA,KAAAlB,IAAA;QACA;UACAiB,OAAA,CAAAC,GAAA;UACA,KAAAV,OAAA,CAAAK,KAAA;UACA,KAAAxB,IAAA,CAAAR,IAAA;QACA;MACA;IACA;IACAwC,WAAAC,QAAA;MACA,KAAArB,KAAA,CAAAqB,QAAA,EAAApB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAoB,KAAA;QACA;UACAN,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}