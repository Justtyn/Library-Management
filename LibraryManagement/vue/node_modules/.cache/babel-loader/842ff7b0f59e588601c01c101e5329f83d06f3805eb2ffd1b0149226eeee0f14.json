{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"AddCategory\",\n  data() {\n    return {\n      form: {},\n      // 表单格式判断规则\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    save() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          request.post(\"/category/save\", this.form).then(res => {\n            if (res.code === \"200\") {\n              this.$notify.success(\"新增成功\");\n              this.$refs[\"ruleForm\"].resetFields();\n              this.$router.push(\"/categoryList\");\n              this.form = {};\n            } else {\n              this.$notify.error(\"新增失败\" + res.msg);\n            }\n          });\n        }\n      });\n    },\n    nameCheck() {\n      const name = this.form.name;\n      request.get(\"/category/namecheck?\", {\n        params: {\n          name\n        }\n      }).then(res => {\n        console.log(res.data);\n        console.log(res.code);\n        const a = res.data;\n        if (a.length == 0) {\n          this.save();\n        } else {\n          this.$notify.error(\"用户名重复 请重新输入\" + res.msg);\n          this.form.name = \"\";\n        }\n      });\n    },\n    reset\n  }\n};","map":{"version":3,"names":["request","name","data","form","rules","required","message","trigger","methods","save","$refs","validate","valid","post","then","res","code","$notify","success","resetFields","$router","push","error","msg","nameCheck","get","params","console","log","a","length","reset"],"sources":["src/views/category/Add.vue"],"sourcesContent":["<template>\n<div style=\"padding-top: 10px\">\n    <h2 style=\"padding-left: 35px\">新增分类</h2>\n    <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"width: 60%\" label-width=\"90px\" class=\"demo-form-inline\">\n        <el-form-item label=\"名称:\" prop=\"name\">\n            <el-input v-model=\"form.name\" placeholder=\"请输入名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"备注:\" prop=\"remark\">\n            <el-input v-model=\"form.remark\" placeholder=\"请输入备注\"></el-input>\n        </el-form-item>\n    </el-form>\n\n    <div style=\"padding-left: 35px; padding-top: 10px\">\n        <el-button type=\"primary\" @click=\"nameCheck\">提交</el-button>\n        <el-button type=\"danger\" @click=\"reset\">重置</el-button>\n    </div>\n</div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n    name: \"AddCategory\",\n    data() {\n        return {\n            form: {},\n            // 表单格式判断规则\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"请输入名称\",\n                    trigger: \"blur\"\n                }],\n            },\n        };\n    },\n    methods: {\n        save() {\n            this.$refs[\"ruleForm\"].validate((valid) => {\n                if (valid) {\n                    request.post(\"/category/save\", this.form).then((res) => {\n                        if (res.code === \"200\") {\n                            this.$notify.success(\"新增成功\");\n                            this.$refs[\"ruleForm\"].resetFields();\n                            this.$router.push(\"/categoryList\");\n                            this.form = {};\n                        } else {\n                            this.$notify.error(\"新增失败\" + res.msg);\n                        }\n                    });\n                }\n            });\n        },\n        nameCheck() {\n            const name = this.form.name;\n            request.get(\"/category/namecheck?\", {\n                params: {\n                    name\n                }\n            }).then((res) => {\n                console.log(res.data);\n                console.log(res.code);\n                const a = res.data;\n                if (a.length == 0) {\n                    this.save();\n                } else {\n                    this.$notify.error(\"用户名重复 请重新输入\" + res.msg);\n                    this.form.name = \"\";\n                }\n            });\n        },\n        reset\n    },\n};\n</script>\n\n<style>\n</style>\n"],"mappings":";AAoBA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACA;MACAC,KAAA;QACAH,IAAA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAZ,OAAA,CAAAa,IAAA,wBAAAV,IAAA,EAAAW,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAR,KAAA,aAAAS,WAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAlB,IAAA;YACA;cACA,KAAAc,OAAA,CAAAK,KAAA,UAAAP,GAAA,CAAAQ,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,UAAA;MACA,MAAAvB,IAAA,QAAAE,IAAA,CAAAF,IAAA;MACAD,OAAA,CAAAyB,GAAA;QACAC,MAAA;UACAzB;QACA;MACA,GAAAa,IAAA,CAAAC,GAAA;QACAY,OAAA,CAAAC,GAAA,CAAAb,GAAA,CAAAb,IAAA;QACAyB,OAAA,CAAAC,GAAA,CAAAb,GAAA,CAAAC,IAAA;QACA,MAAAa,CAAA,GAAAd,GAAA,CAAAb,IAAA;QACA,IAAA2B,CAAA,CAAAC,MAAA;UACA,KAAArB,IAAA;QACA;UACA,KAAAQ,OAAA,CAAAK,KAAA,iBAAAP,GAAA,CAAAQ,GAAA;UACA,KAAApB,IAAA,CAAAF,IAAA;QACA;MACA;IACA;IACA8B;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}