{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '@/utils/request';\nimport Cookies from 'js-cookie';\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      loginAdmin: {},\n      admin: {},\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }, {\n          min: 2,\n          max: 10,\n          message: \"用户名长度不合规 「2 - 10」\",\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 10,\n          message: \"用户名长度不合规 「3 - 10」\",\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$refs[\"loginForm\"].validate(valid => {\n        if (valid) {\n          // Cookies.set('admin', \"error\")\n          request.post('/admin/login', this.admin).then(res => {\n            if (res.code === '200') {\n              this.$notify.success(\"登陆成功\");\n              if (res.data != null) {\n                // Cookies.remove('admin')\n                // 要将 JSON 格式的数据转换为字符串类型 才可以存到 COOKIE 中\n                Cookies.set('admin', JSON.stringify(res.data));\n              }\n              this.$router.push(\"/\");\n            } else {\n              console.log(res.data);\n              this.$notify.error(res.data);\n            }\n          });\n        }\n      });\n    },\n    onSuccess() {\n      Cookies.set('admin', JSON.stringify(this.loginAdmin));\n      this.$router.push('/');\n      this.$notify.success(\"登录成功\");\n    },\n    onFail() {},\n    onRefresh() {\n      console.log('refresh');\n    }\n  }\n};","map":{"version":3,"names":["request","Cookies","name","data","loginAdmin","admin","rules","username","required","message","trigger","min","max","password","methods","login","$refs","validate","valid","post","then","res","code","$notify","success","set","JSON","stringify","$router","push","console","log","error","onSuccess","onFail","onRefresh"],"sources":["src/views/login/Login.vue"],"sourcesContent":["<template>\n<div style=\"height: 90vh; overflow: hidden;\">\n\n    <!-- 滑块登陆验证模块 -->\n    <el-card class=\"cover\" v-if=\"loginAdmin.id\">\n        <slide-verify :l=\"42\" :r=\"10\" :w=\"310\" :h=\"155\" slider-text=\"向右滑动\" @success=\"onSuccess\" @fail=\"onFail\" @refresh=\"onRefresh\"></slide-verify>\n    </el-card>\n\n    <!-- 头部区域 -->\n    <div style=\"border-radius: 10px; height: 60px; line-height: 60px; background-color: white\">\n        <img src=\"@/assets/logo.png\" alt=\"\" style=\"\n          width: 40px;\n          height: 40px;\n          position: relative;\n          top: 10px;\n          left: 20px;\n        \" />\n        <span style=\"margin-left: 25px; font-size: 24px\">图书管理系统</span>\n        <span style=\"margin-left: 8px; font-size: 13px\">By Justyn</span>\n    </div>\n\n    <!-- 登陆框 -->\n    <div style=\"width: 500px; height: 350px; background-color: azure; border-radius: 20px;margin: 130px auto; padding: 50px;\">\n        <div style=\"margin: 10px;margin-bottom: 30px; margin-top: -20px; text-align: center; font-size: 30px; font-weight: bold; color: grey;\">登 陆</div>\n        <el-form :model=\"admin\" ref=\"loginForm\" :rules=\"rules\">\n            <el-form-item prop=\"username\">\n                <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"admin.username\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n                <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password v-model=\"admin.password\"></el-input>\n            </el-form-item>\n\n            <el-form-item>\n                <el-button @click=\"login\" style=\"width: 100%; size: medium;\" type=\"primary\">登陆</el-button>\n            </el-form-item>\n            <el-form-item>\n                <el-button @click=\"$router.push('/register')\" style=\"width: 100%; size: medium;\" type=\"danger\">注册</el-button>\n            </el-form-item>\n\n        </el-form>\n    </div>\n</div>\n</template>\n\n<script>\nimport request from '@/utils/request';\nimport Cookies from 'js-cookie'\n\nexport default {\n    name: \"Login\",\n    data() {\n        return {\n            loginAdmin: {},\n            admin: {},\n            rules: {\n                username: [{\n                    required: true,\n                    message: \"请输入用户名\",\n                    trigger: \"blur\"\n                }, {\n                    min: 2,\n                    max: 10,\n                    message: \"用户名长度不合规 「2 - 10」\",\n                    trigger: 'blur'\n                }],\n\n                password: [{\n                    required: true,\n                    message: \"请输入密码\",\n                    trigger: \"blur\"\n                }, {\n                    min: 3,\n                    max: 10,\n                    message: \"用户名长度不合规 「3 - 10」\",\n                    trigger: 'blur'\n                }],\n            },\n        }\n    },\n    methods: {\n        login() {\n            this.$refs[\"loginForm\"].validate((valid) => {\n                if (valid) {\n                    // Cookies.set('admin', \"error\")\n                    request.post('/admin/login', this.admin).then(res => {\n                        if (res.code === '200') {\n                            this.$notify.success(\"登陆成功\")\n\n                            if (res.data != null) {\n                                // Cookies.remove('admin')\n                                // 要将 JSON 格式的数据转换为字符串类型 才可以存到 COOKIE 中\n                                Cookies.set('admin', JSON.stringify(res.data))\n                            }\n                            this.$router.push(\"/\")\n                        } else {\n                            console.log(res.data);\n                            this.$notify.error(res.data)\n                        }\n                    })\n                }\n            })\n        },\n        onSuccess() {\n      Cookies.set('admin', JSON.stringify(this.loginAdmin))\n      this.$router.push('/')\n      this.$notify.success(\"登录成功\")\n    },\n    onFail() {\n      \n    },\n    onRefresh() {\n      console.log('refresh')\n    }\n\n    }\n}\n</script>\n\n<style>\n\n/* 滑块界面 置顶 居中 */\n.cover {\n    width: fit-content;\n    background-color: white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n</style>\n"],"mappings":";AA6CA,OAAAA,OAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,KAAA;MACAC,KAAA;QACAC,QAAA;UACAC,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;UACAC,GAAA;UACAC,GAAA;UACAH,OAAA;UACAC,OAAA;QACA;QAEAG,QAAA;UACAL,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;UACAC,GAAA;UACAC,GAAA;UACAH,OAAA;UACAC,OAAA;QACA;MACA;IACA;EACA;EACAI,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,cAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACAlB,OAAA,CAAAmB,IAAA,sBAAAd,KAAA,EAAAe,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cAEA,IAAAH,GAAA,CAAAlB,IAAA;gBACA;gBACA;gBACAF,OAAA,CAAAwB,GAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAN,GAAA,CAAAlB,IAAA;cACA;cACA,KAAAyB,OAAA,CAAAC,IAAA;YACA;cACAC,OAAA,CAAAC,GAAA,CAAAV,GAAA,CAAAlB,IAAA;cACA,KAAAoB,OAAA,CAAAS,KAAA,CAAAX,GAAA,CAAAlB,IAAA;YACA;UACA;QACA;MACA;IACA;IACA8B,UAAA;MACAhC,OAAA,CAAAwB,GAAA,UAAAC,IAAA,CAAAC,SAAA,MAAAvB,UAAA;MACA,KAAAwB,OAAA,CAAAC,IAAA;MACA,KAAAN,OAAA,CAAAC,OAAA;IACA;IACAU,OAAA,GAEA;IACAC,UAAA;MACAL,OAAA,CAAAC,GAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}