{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"AddUser\",\n  data() {\n    // 检查年龄函数\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"年龄不能为空\"));\n      }\n      if (!Number.isInteger(value)) {\n        callback(new Error(\"请输入数字\"));\n      }\n      if (value >= 120 || value <= 0) {\n        callback(new Error(\"请输入合法年龄 「1 - 120」\"));\n      }\n      callback();\n    };\n    // 检查手机函数\n    var checkPhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"年龄不能为空\"));\n      }\n      if (!Number.isInteger(value)) {\n        callback(new Error(\"请输入数字\"));\n      }\n      if (value >= 120 || value <= 0) {\n        callback(new Error(\"请输入合法年龄 「1 - 120」\"));\n      }\n      callback();\n    };\n    return {\n      form: {\n        sex: \"男\"\n      },\n      // 表单格式判断规则\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入用户名称\",\n          trigger: \"blur\"\n        }],\n        age: [{\n          validator: checkAge,\n          trigger: \"blur\"\n        }],\n        phone: [{\n          validator: checkPhone,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    save() {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post(\"/user/save\", this.form).then(res => {\n            if (res.code === \"200\") {\n              this.$notify.success(\"新增成功\");\n              this.$router.push(\"/user\");\n              this.form = {\n                sex: \"男\"\n              };\n            } else {\n              this.$notify.error(\"新增失败\" + \"\\nres.msg\");\n            }\n          });\n        } else {}\n      });\n    },\n    nameCheck() {\n      const name = this.form.name;\n      request.get(\"/user/namecheck?id=\", {\n        params: {\n          name\n        }\n      }).then(res => {\n        console.log(res.data);\n        console.log(res.code);\n        const a = res.data;\n        if (a.length == 0) {\n          console.log(1);\n          this.save();\n        } else {\n          console.log(2);\n          this.$notify.error(\"用户名重复 请重新输入\" + \"\\nres.msg\");\n          this.form.name = \"\";\n        }\n      });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkAge","rule","value","callback","Error","Number","isInteger","checkPhone","form","sex","rules","required","message","trigger","age","validator","phone","methods","save","$refs","formName","validate","valid","post","then","res","code","$notify","success","$router","push","error","nameCheck","get","params","console","log","a","length","submitForm","alert"],"sources":["src/views/user/AddUser.vue"],"sourcesContent":["<template>\n  <div style=\"padding-top: 10px\">\n    <h2 style=\"padding-left: 35px\">新增用户</h2>\n    <el-form\n      :inline=\"true\"\n      :model=\"form\"\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      style=\"width: 80%\"\n      label-width=\"90px\"\n      class=\"demo-form-inline\"\n    >\n      <el-form-item label=\"用户名:\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入用户名\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"年龄:\" prop=\"age\">\n        <el-input v-model.number=\"form.age\" placeholder=\"请输入年龄\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"性别:\">\n        <el-radio v-model=\"form.sex\" label=\"男\">男</el-radio>\n        <el-radio v-model=\"form.sex\" label=\"女\">女</el-radio>\n      </el-form-item>\n      <el-form-item label=\"手机号:\" prop=\"phone\">\n        <el-input\n          v-model.number=\"form.phone\"\n          placeholder=\"请输入手机号\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"地址:\">\n        <el-input v-model=\"form.address\" placeholder=\"请输入地址\"></el-input>\n      </el-form-item>\n    </el-form>\n\n    <div style=\"padding-left: 35px; padding-top: 10px\">\n      <el-button type=\"primary\" @click=\"nameCheck\">提交</el-button>\n      <el-button type=\"danger\">重置</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"AddUser\",\n  data() {\n    // 检查年龄函数\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"年龄不能为空\"));\n      }\n      if (!Number.isInteger(value)) {\n        callback(new Error(\"请输入数字\"));\n      }\n      if (value >= 120 || value <= 0) {\n        callback(new Error(\"请输入合法年龄 「1 - 120」\"));\n      }\n      callback();\n    };\n    // 检查手机函数\n    var checkPhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"年龄不能为空\"));\n      }\n      if (!Number.isInteger(value)) {\n        callback(new Error(\"请输入数字\"));\n      }\n      if (value >= 120 || value <= 0) {\n        callback(new Error(\"请输入合法年龄 「1 - 120」\"));\n      }\n      callback();\n    };\n\n    return {\n      form: {\n        sex: \"男\",\n      },\n      // 表单格式判断规则\n      rules: {\n        name: [{ required: true, message: \"请输入用户名称\", trigger: \"blur\" }],\n        age: [{ validator: checkAge, trigger: \"blur\" }],\n        phone: [{ validator: checkPhone, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    save() {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          request.post(\"/user/save\", this.form).then((res) => {\n            if (res.code === \"200\") {\n              this.$notify.success(\"新增成功\");\n              this.$router.push(\"/user\");\n              this.form = { sex: \"男\" };\n            } else {\n              this.$notify.error(\"新增失败\" + \"\\nres.msg\");\n            }\n          });\n        } else {\n        }\n      });\n    },\n    nameCheck() {\n      const name = this.form.name;\n      request.get(\"/user/namecheck?id=\", { params: { name } }).then((res) => {\n        console.log(res.data);\n        console.log(res.code);\n        const a = res.data;\n        if (a.length == 0) {\n          console.log(1);\n          this.save();\n        } else {\n          console.log(2);\n          this.$notify.error(\"用户名重复 请重新输入\" + \"\\nres.msg\");\n          this.form.name = \"\";\n        }\n      });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";AAyCA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;IACA,IAAAC,QAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA;MACA,KAAAC,MAAA,CAAAC,SAAA,CAAAJ,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,IAAAF,KAAA,WAAAA,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IACA;IACA,IAAAI,UAAA,GAAAA,CAAAN,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA;MACA,KAAAC,MAAA,CAAAC,SAAA,CAAAJ,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,IAAAF,KAAA,WAAAA,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IAEA;MACAK,IAAA;QACAC,GAAA;MACA;MACA;MACAC,KAAA;QACAZ,IAAA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,GAAA;UAAAC,SAAA,EAAAf,QAAA;UAAAa,OAAA;QAAA;QACAG,KAAA;UAAAD,SAAA,EAAAR,UAAA;UAAAM,OAAA;QAAA;MACA;IACA;EACA;EACAI,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAzB,OAAA,CAAA0B,IAAA,oBAAAf,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAtB,IAAA;gBAAAC,GAAA;cAAA;YACA;cACA,KAAAkB,OAAA,CAAAI,KAAA;YACA;UACA;QACA,QACA;MACA;IACA;IACAC,UAAA;MACA,MAAAlC,IAAA,QAAAU,IAAA,CAAAV,IAAA;MACAD,OAAA,CAAAoC,GAAA;QAAAC,MAAA;UAAApC;QAAA;MAAA,GAAA0B,IAAA,CAAAC,GAAA;QACAU,OAAA,CAAAC,GAAA,CAAAX,GAAA,CAAA1B,IAAA;QACAoC,OAAA,CAAAC,GAAA,CAAAX,GAAA,CAAAC,IAAA;QACA,MAAAW,CAAA,GAAAZ,GAAA,CAAA1B,IAAA;QACA,IAAAsC,CAAA,CAAAC,MAAA;UACAH,OAAA,CAAAC,GAAA;UACA,KAAAlB,IAAA;QACA;UACAiB,OAAA,CAAAC,GAAA;UACA,KAAAT,OAAA,CAAAI,KAAA;UACA,KAAAvB,IAAA,CAAAV,IAAA;QACA;MACA;IACA;IACAyC,WAAAnB,QAAA;MACA,KAAAD,KAAA,CAAAC,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAkB,KAAA;QACA;UACAL,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}